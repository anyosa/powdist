}
dpc(exp(-1), log = TRUE)
dcauchy(exp(-1), log = TRUE)
ppc <- function(q, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
p = pcauchy(q, mu, sigma)**lambda
if (lower.tail == FALSE) {
p = 1 - p
}
if (log.p == TRUE) {
p = log(p)
}
return(p) #ok
}
pcauchy(1)
ppc(1)
pcauchy(1, lower.tail = FALSE)
ppc(1, lower.tail = FALSE)
pcauchy(1, lower.tail = FALSE, log.p log.p = TRUE)
pcauchy(1, lower.tail = FALSE, log.p = TRUE)
ppc(1, lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
pcauchy(1, 2, 0.6lower.tail = FALSE, log.p = TRUE)
pcauchy(1, 2, 0.6,lower.tail = FALSE, log.p = TRUE)
ppc(1,1, 2, 0.6,lower.tail = FALSE, log.p = TRUE)
qcauchy(exp(-1))
qpc(exp(-1))
qcauchy(exp(-1), lower.tail = FALSE)
qpc(exp(-1), lower.tail = FALSE)
qcauchy(exp(-1), lower.tail = FALSE, log.p = TRUE)
exp(-1)
qcauchy(exp(-1), lower.tail = FALSE, log.p = TRUE)
qpc(exp(-1), lower.tail = FALSE, log.p = TRUE)
qcauchy(0.5, lower.tail = FALSE, log.p = TRUE)
qnorm(0.5, lower.tail = FALSE, log.p = TRUE)
qcauchy(0.5,log.p = TRUE)
qcauchy(log(0.5),log.p = TRUE)
qcauchy(log(0.7),log.p = TRUE)
qnorm(log(0.7), lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7),  log.p = TRUE)
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.7), log.p = TRUE)
qpc(log(0.7), log.p = TRUE)
qcauchy(log(0.7), lower.tail lower.tail = TRUE)
qcauchy(log(0.7), lower.tail = TRUE)
qcauchy(.7, lower.tail = TRUE)
qpc(.7, lower.tail = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE && log.p = FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (lower.tail == FALSE && log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
if (lower.tail == TRUE && log.p == TRUE) {
q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE && log.p = FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (lower.tail == FALSE && log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
if (lower.tail == TRUE && log.p == TRUE) {
q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qcauchy(.7, lower.tail = TRUE)
qpc(.7, lower.tail = TRUE)
qcauchy(.7, log.p = TRUE)
qcauchy(log(.7), log.p = TRUE)
qpc(log(.7), log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (!lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (!lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(0.7)
qpc(0.7)
qpc(0.7, lower.tail = TRUE, log.p = FALSE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (!lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (!lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(0.7)
qpc(0.7)
qpc(0.7)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(0.7)
qpc(0.7)
qcauchy(0.7, lower.tail = TRUE, log.p = FALSE)
qpc(0.7, lower.tail = TRUE, log.p = FALSE)
qcauchy(0.7, lower.tail = TRUE, log.p = TRUE)
qcauchy(log(0.7), lower.tail = TRUE, log.p = TRUE)
qpc(log(0.7), lower.tail = TRUE, log.p = TRUE)
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpclog(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy(exp(1-p))**(1/lambda))* sigma + mu}
return(q)
}
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qcauchy(0.4, lower.tail = FALSE, log.p = FALSE)
qpc(0.4, lower.tail = FALSE, log.p = FALSE)
qcauchy(0.4, 1.6, 0.56, lower.tail = TRUE, log.p = FALSE)
qpc(0.4, 1, 1.6, 0.56, lower.tail = TRUE, log.p = FALSE)
qcauchy(0.4, 1.6, 0.56, lower.tail = FALSE, log.p = FALSE)
qpc(0.4, 1, 1.6, 0.56, lower.tail = FALSE, log.p = FALSE)
qcauchy(0.4, 1.6, 0.56, lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.4), 1.6, 0.56, lower.tail = FALSE, log.p = TRUE)
qpc(log(0.4),1, 1.6, 0.56, lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.4), 1.6, 0.56, lower.tail = TRUE, log.p = TRUE)
qpc(log(0.4),1, 1.6, 0.56, lower.tail = TRUE, log.p = TRUE)
dpc <- function(x, lambda = 1, mu = 0, sigma = 1, log = FALSE){
if (log == FALSE) {
d = (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1))
} else {d = log( (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1)) )}
return(d)
}
dcauchy(1)
dpc(1)
dcauchy(1, log = FALSE)
dpc(1, log = FALSE)
dcauchy(1, log = TRUE)
dpc(1, log = TRUE)
dcauchy(1, 3, 0.1, log = TRUE)
dpc(1, 1, 3, 0.1, log = TRUE)
dpc(1, 3, 0.1, log = TRUE)
dpc(1, 1,  3, 0.1, log = TRUE)
ppc <- function(q, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
p = pcauchy(q, mu, sigma)**lambda
if (lower.tail == FALSE) {
p = 1 - p
}
if (log.p == TRUE) {
p = log(p)
}
return(p) #ok
}
pcauchy(1)
pcauchy(1.1)
pcauchy(1.1, lower.tail = FALSE)
ppc(1.1, lower.tail = FALSE)
pcauchy(1.1, lower.tail = FALSE, log.p = TRUE)
pcauchy(0.5, lower.tail = FALSE, log.p = TRUE)
ppc(0.5, lower.tail = FALSE, log.p = TRUE)
ppc(0.5, log.p = TRUE)
pcauchy(0.5, log.p = TRUE)
ppc(0.5, lower.tail = FALSE, log.p = TRUE)
ppc(0.5, log.p = TRUE)
pcauchy(0.5, log.p = TRUE)
devtools::document()
devtools::check()
dpc <- function(x, lambda = 1, mu = 0, sigma = 1, log = FALSE){
d = (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1))
if (log == TRUE) {
d = log( (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1)) )
}
return(d)
}
dpc(1)
dcauchy(1)
dcauchy(1, log = TRUE)
dpc(1, log = TRUE)
log(dcauchy(1)
)
ppc <- function(q, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
p = pcauchy(q, mu, sigma)**lambda
if (lower.tail == FALSE) {
p = 1 - p
}
if (log.p == TRUE) {
p = log(p)
}
return(p)
}
pcauchy(1)
pcauchy(1, lower.tail = TRUE, log.p log.p = FALSE)
pcauchy(1, lower.tail = TRUE,  log.p = FALSE)
ppc(1, lower.tail = TRUE,  log.p = FALSE)
pcauchy(1, lower.tail = FALSE,  log.p = FALSE)
ppc(1, lower.tail = FALSE,  log.p = FALSE)
ppc(1, lower.tail = TRUE,  log.p = TRUE)
pcauchy(1, lower.tail = TRUE,  log.p = TRUE)
pcauchy(1, lower.tail = FALSE,  log.p = TRUE)
ppc(1, lower.tail = FALSE,  log.p = TRUE)
pcauchy(1, -2, 0.45, lower.tail = FALSE,  log.p = TRUE)
ppc(1,1, -2, 0.45, lower.tail = FALSE,  log.p = TRUE)
devtools::document()
devtools::check()
qpn <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qnorm(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qnorm((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qnorm(exp(p)**(1/lambda))* sigma + mu
} else {q = qnorm((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
qpn <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qnorm(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qnorm((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qnorm(exp(p)**(1/lambda))* sigma + mu
} else {q = qnorm((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::install_github(powdist, susanca)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
{f(x)=[\lambda/\sigma][exp(-(x-\mu)/\sigma-exp(-(x-\mu)/\sigma))][exp(-exp(-(x-\mu)/\sigma))]^(\lambda-1)},
{f(x)=[\lambda/\sigma][exp(-(x-\mu)/\sigma-exp(-(x-\mu)/\sigma))][exp(-exp((x-\mu)/\sigma))]^(\lambda-1)},
{f(x)=[\lambda/\sigma][exp((x-\mu)/\sigma-exp((x-\mu)/\sigma))][1-exp(-exp((x-\mu)/\sigma))]^(\lambda-1)},
{f(x)=[\lambda/\sigma][exp((x-\mu)/\sigma-exp((x-\mu)/\sigma))][1-exp(-exp(-(x-\mu)/\sigma))]^(\lambda-1)},
{f(x)=[\lambda/\sigma][][]^(\lambda-1)}
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
library(rmutil)
install.packages("rmutil")
library(rmutil)
library(rmutil)
dt(2, 3, log = FALSE)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
dt(2)
dt(2,1)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
-(2-3)/6
(-2+3)/6
library("rmutil", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
plaplace(-1,2,3)
plaplace((-1+2)/3)
plaplace((-1-2)/3)
plogis(3,1, 0.6)**2
plogis((3-1)/0.6)**2
devtools::document()
devtools::check()
1 - (plogis(-1, 2, 3)**2)
1 - (plogis((-1+2)/3)**2)
1 - (plogis((-1-2)/3)**2)
1 - (plogis((-(1-2))/3)**2)
devtools::document()
devtools::document()
devtools::check()
library("rmutil", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("zipfR")
library(zipfR)
gamma(2)
Cgamma(2)
source('~/.active-rstudio-document', echo=TRUE)
ppowexp(1, f=2)
ppowexp(1, f=0.5)
ppowexp(1, f=2)
ppowexp(1, f=2)+0.187442
0.5*(1+(1/(gamma(1.5)))*(Igamma(1.5,0.5)) )
install.packages("lmomco")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("goftest")
install.packages("~/Downloads/goftest_1.0-1.tar.gz", repos = NULL, type = "source")
install.packages("lmomco")
exp(-exp(-2))
pgumbe(2)
pgumbel(2)
library(VGAM)
exp(-exp(-2))
pgumbel(2)
1-exp(-exp(2))
pgumbelII(2)
pgumbelII(2,shape=1)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
library(powdist)
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
library(powdist)
library(powdist)
remove.packages("powdist", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
devtools::build()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
