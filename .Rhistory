dllogistic = function(x, m, b, log = FALSE) {
if (log == TRUE) {
d = log(b) + b * log(1 - m) + b * log(m) + (b - 1) * log(1 - x) + (b - 1) * log(x) -
2 * log(((1 - m)^b * x^b + m^b * (1 - x)^b))
} else {
d = (b * (1 - m)^b * m^b * (x * (1 - x))^(b - 1))/(((1 - m)^b * x^b + m^b * (1 - x)^b)^2)
}
return(d)
}
dllogistic(0.3, 0.5, 2)
dllogistic(0.3, 0.5, 2, log = TRUE)
log( dllogistic(0.3, 0.5, 2) )
dllogistic(0.3, 0.5, 2, log = FALSE)
log( dllogistic(0.3, 0.5, 2, log = FALSE) )
devtools::document()
devtools::check()
qnorm(0)
qnorm(0.5)
qnorm
log(0.5)
qnorm(-0.6931472, log.p = TRUE)
log(0)
log(1)
qnorm(1)
log(exp(-1))
exp(-1)
qnorm(exp(-1))
qnorm(-1
)
qnorm(-1, log.p = TRUE)
log(qnorm(-1))
log(qnorm(exp(-1)))
exp(-1)
qnorm(exp(-1))
qnorm(-1)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1 - q
}
if (log.p == TRUE) {
q = qcauchy(log(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(exp(-1),1)
qcauchy(-1)
qcauchy(exp(-1))
qcauchy(-1, log.p = TRUE)
qpc(exp(-1),1, log.p = TRUE)
qpc(-1,1, log.p = TRUE)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1 - q
}
if (log.p == TRUE) {
q = qcauchy(log(p**(1/lambda)))* sigma + mu
}
return(q)
}
qpc(-1,1, log.p = TRUE)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1 - q
}
if (log.p == TRUE) {
q = qcauchy(p**(1/lambda), log.p == TRUE)* sigma + mu
}
return(q)
}
qpc(-1,1, log.p = TRUE)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1 - q
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(-1,1, log.p = TRUE)
exp(-4)
qpc(exp(-4),1)
qpc(-4,1,log.p=TRUE)
qpc(exp(-2),1)
qpc(-2,1,log.p=TRUE)
qpc(exp(-2),1,2,3.4)
qpc(-2,1,2,3.4log.p=TRUE)
qpc(-2,1,2,3.4,log.p=TRUE)
qcauchy(0.5)
qcauchy(0.5, lower.tail = FALSE)
qcauchy(0.4)
qcauchy(0.4, lower.tail = FALSE)
qcauchy(0.6)
library(VGAM)
qgumbel(0.4)
qgumbel(0.6)
qgumbel(0.4, lower.tail = FALSE)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = qcauchy(p**(1/lambda),lower.tail == FALSE)* sigma + mu
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(0.4)
qpc(0.4,1)
qpc(0.6,1)
qpc(0.4,1,lower.tail = FALSE)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1- (qcauchy(p**(1/lambda),lower.tail == FALSE)* sigma + mu)
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(0.6,1)
qpc(0.4,1,lower.tail = FALSE)
qpc(0.56,2)
qpc(0.56,2,lower.tail = FALSE)
qgumbel(0.25)
library(VGAM)
qgumbel(0.25)
qgumbel(0.25, lower.tail = FALSE)
qgumbel(0.75)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1- (qcauchy(p**(1/lambda),lower.tail == FALSE)* sigma + mu) #CORREGIR
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(0.25,1)
qpc(0.25,1, lower.tail = FALSE)
qpc(0.75,1)
qpc(0.25,0.5,3,4)
qpc(0.25,0.5,3,4, lower.tail = FALSE)
qpc(0.75,0.5,3,4)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = 1- (qcauchy(p**(1/lambda))* sigma + mu) #CORREGIR
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(0.25,0.5,3,4)
qpc(0.25,0.5,3,4, lower.tail = FALSE)
qpc(0.75,0.5,3,4)
qpc <- function(p, lambda, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #CORREGIR
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc(0.25,0.5,3,4)
qpc(0.25,0.5,3,4, lower.tail = FALSE)
qpc(0.75,0.5,3,4)
dpc <- function(x, lambda, mu = 0, sigma = 1, log = FALSE){
d = (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1))
if (log == TRUE) {
d = log( (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1)) )
} #else {
#}
return(d)
}
dcauchy(exp(-1))
dpc(exp(-1),1)
dcauchy(exp(-1),log =TRUE)
dpc(exp(-1),1, log = TRUE)
log(dcauchy(exp(-1)))
dcauchy(log(-1),log =TRUE)
dcauchy(-1,log =TRUE)
dpc(exp(-1), log = TRUE)
dpc <- function(x, lambda = 1, mu = 0, sigma = 1, log = FALSE){
d = (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1))
if (log == TRUE) {
d = log( (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1)) )
}
return(d)#ok
}
dpc(exp(-1), log = TRUE)
dcauchy(exp(-1), log = TRUE)
ppc <- function(q, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
p = pcauchy(q, mu, sigma)**lambda
if (lower.tail == FALSE) {
p = 1 - p
}
if (log.p == TRUE) {
p = log(p)
}
return(p) #ok
}
pcauchy(1)
ppc(1)
pcauchy(1, lower.tail = FALSE)
ppc(1, lower.tail = FALSE)
pcauchy(1, lower.tail = FALSE, log.p log.p = TRUE)
pcauchy(1, lower.tail = FALSE, log.p = TRUE)
ppc(1, lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
pcauchy(1, 2, 0.6lower.tail = FALSE, log.p = TRUE)
pcauchy(1, 2, 0.6,lower.tail = FALSE, log.p = TRUE)
ppc(1,1, 2, 0.6,lower.tail = FALSE, log.p = TRUE)
qcauchy(exp(-1))
qpc(exp(-1))
qcauchy(exp(-1), lower.tail = FALSE)
qpc(exp(-1), lower.tail = FALSE)
qcauchy(exp(-1), lower.tail = FALSE, log.p = TRUE)
exp(-1)
qcauchy(exp(-1), lower.tail = FALSE, log.p = TRUE)
qpc(exp(-1), lower.tail = FALSE, log.p = TRUE)
qcauchy(0.5, lower.tail = FALSE, log.p = TRUE)
qnorm(0.5, lower.tail = FALSE, log.p = TRUE)
qcauchy(0.5,log.p = TRUE)
qcauchy(log(0.5),log.p = TRUE)
qcauchy(log(0.7),log.p = TRUE)
qnorm(log(0.7), lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7),  log.p = TRUE)
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.7), log.p = TRUE)
qpc(log(0.7), log.p = TRUE)
qcauchy(log(0.7), lower.tail lower.tail = TRUE)
qcauchy(log(0.7), lower.tail = TRUE)
qcauchy(.7, lower.tail = TRUE)
qpc(.7, lower.tail = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE && log.p = FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (lower.tail == FALSE && log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
if (lower.tail == TRUE && log.p == TRUE) {
q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE && log.p = FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (lower.tail == FALSE && log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
if (lower.tail == TRUE && log.p == TRUE) {
q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu
}
return(q)
}
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
q = qcauchy(p**(1/lambda))* sigma + mu
if (lower.tail == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu #OK
}
if (log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
}
return(q)
}
qcauchy(.7, lower.tail = TRUE)
qpc(.7, lower.tail = TRUE)
qcauchy(.7, log.p = TRUE)
qcauchy(log(.7), log.p = TRUE)
qpc(log(.7), log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (!lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (!lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(0.7)
qpc(0.7)
qpc(0.7, lower.tail = TRUE, log.p = FALSE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (!lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (!lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(0.7)
qpc(0.7)
qpc(0.7)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(0.7)
qpc(0.7)
qcauchy(0.7, lower.tail = TRUE, log.p = FALSE)
qpc(0.7, lower.tail = TRUE, log.p = FALSE)
qcauchy(0.7, lower.tail = TRUE, log.p = TRUE)
qcauchy(log(0.7), lower.tail = TRUE, log.p = TRUE)
qpc(log(0.7), lower.tail = TRUE, log.p = TRUE)
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & !log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpclog(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy(exp(1-p))**(1/lambda))* sigma + mu}
return(q)
}
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy(exp(1-p)**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qcauchy(p**(1/lambda))* sigma + mu#ok
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qcauchy((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qcauchy(exp(p)**(1/lambda))* sigma + mu#ok
} else {q = qcauchy((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
qcauchy(log(0.7), lower.tail = FALSE, log.p = TRUE)
qpc(log(0.7), lower.tail = FALSE, log.p = TRUE)
qcauchy(0.4, lower.tail = FALSE, log.p = FALSE)
qpc(0.4, lower.tail = FALSE, log.p = FALSE)
qcauchy(0.4, 1.6, 0.56, lower.tail = TRUE, log.p = FALSE)
qpc(0.4, 1, 1.6, 0.56, lower.tail = TRUE, log.p = FALSE)
qcauchy(0.4, 1.6, 0.56, lower.tail = FALSE, log.p = FALSE)
qpc(0.4, 1, 1.6, 0.56, lower.tail = FALSE, log.p = FALSE)
qcauchy(0.4, 1.6, 0.56, lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.4), 1.6, 0.56, lower.tail = FALSE, log.p = TRUE)
qpc(log(0.4),1, 1.6, 0.56, lower.tail = FALSE, log.p = TRUE)
qcauchy(log(0.4), 1.6, 0.56, lower.tail = TRUE, log.p = TRUE)
qpc(log(0.4),1, 1.6, 0.56, lower.tail = TRUE, log.p = TRUE)
dpc <- function(x, lambda = 1, mu = 0, sigma = 1, log = FALSE){
if (log == FALSE) {
d = (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1))
} else {d = log( (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1)) )}
return(d)
}
dcauchy(1)
dpc(1)
dcauchy(1, log = FALSE)
dpc(1, log = FALSE)
dcauchy(1, log = TRUE)
dpc(1, log = TRUE)
dcauchy(1, 3, 0.1, log = TRUE)
dpc(1, 1, 3, 0.1, log = TRUE)
dpc(1, 3, 0.1, log = TRUE)
dpc(1, 1,  3, 0.1, log = TRUE)
ppc <- function(q, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
p = pcauchy(q, mu, sigma)**lambda
if (lower.tail == FALSE) {
p = 1 - p
}
if (log.p == TRUE) {
p = log(p)
}
return(p) #ok
}
pcauchy(1)
pcauchy(1.1)
pcauchy(1.1, lower.tail = FALSE)
ppc(1.1, lower.tail = FALSE)
pcauchy(1.1, lower.tail = FALSE, log.p = TRUE)
pcauchy(0.5, lower.tail = FALSE, log.p = TRUE)
ppc(0.5, lower.tail = FALSE, log.p = TRUE)
ppc(0.5, log.p = TRUE)
pcauchy(0.5, log.p = TRUE)
ppc(0.5, lower.tail = FALSE, log.p = TRUE)
ppc(0.5, log.p = TRUE)
pcauchy(0.5, log.p = TRUE)
devtools::document()
devtools::check()
dpc <- function(x, lambda = 1, mu = 0, sigma = 1, log = FALSE){
d = (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1))
if (log == TRUE) {
d = log( (lambda/sigma) * dcauchy((x-mu)/sigma) * (pcauchy((x-mu)/sigma)**(lambda-1)) )
}
return(d)
}
dpc(1)
dcauchy(1)
dcauchy(1, log = TRUE)
dpc(1, log = TRUE)
log(dcauchy(1)
)
ppc <- function(q, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
p = pcauchy(q, mu, sigma)**lambda
if (lower.tail == FALSE) {
p = 1 - p
}
if (log.p == TRUE) {
p = log(p)
}
return(p)
}
pcauchy(1)
pcauchy(1, lower.tail = TRUE, log.p log.p = FALSE)
pcauchy(1, lower.tail = TRUE,  log.p = FALSE)
ppc(1, lower.tail = TRUE,  log.p = FALSE)
pcauchy(1, lower.tail = FALSE,  log.p = FALSE)
ppc(1, lower.tail = FALSE,  log.p = FALSE)
ppc(1, lower.tail = TRUE,  log.p = TRUE)
pcauchy(1, lower.tail = TRUE,  log.p = TRUE)
pcauchy(1, lower.tail = FALSE,  log.p = TRUE)
ppc(1, lower.tail = FALSE,  log.p = TRUE)
pcauchy(1, -2, 0.45, lower.tail = FALSE,  log.p = TRUE)
ppc(1,1, -2, 0.45, lower.tail = FALSE,  log.p = TRUE)
devtools::document()
devtools::check()
qpn <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qnorm(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qnorm((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qnorm(exp(p)**(1/lambda))* sigma + mu
} else {q = qnorm((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
qpn <- function(p, lambda = 1, mu = 0, sigma = 1, lower.tail = TRUE, log.p = FALSE){
if (lower.tail == TRUE & log.p == FALSE) {
q = qnorm(p**(1/lambda))* sigma + mu
} else if (lower.tail == FALSE & log.p == FALSE) {
q = qnorm((1-p)**(1/lambda))* sigma + mu
} else if (lower.tail == TRUE & log.p == TRUE) {
q = qnorm(exp(p)**(1/lambda))* sigma + mu
} else {q = qnorm((1-exp(p))**(1/lambda))* sigma + mu}
return(q)
}
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
